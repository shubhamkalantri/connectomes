%% Add paths to toolboxes.
addpath("../Toolboxes");
%% Read in CSVs.
[structural, functional] = LoadConnectomes("../Task2Data/");
%% Q1:      Calculate indirect structural connectivity matrix
indirect = IndirectStructuralConnectivityMatrix(structural);
%% Q2&3:    Cross-validation, parameter estimate variation and fit quality,
%           best-fitting models' relationships over select edges
disp("Questions 2&3 ===");
cvMethod = 'LeaveOneOut'; % 'Kfold', 'LeaveOneOut'
fprintf("%s cross-validation\n", cvMethod);
models = {Model1(), Model2(), Model3(), Model4(), Model5()};
MainSubtask(models, functional, structural, indirect, ...
    "bestModelsN", 5, ...
    "sortModelsByMeanOf", 'sse', ...
    "numEdges", 100, ...
    "fitMethod", 'Fit', ...
    "cvMethod", cvMethod);
disp("=================");
%% Q4:      Q2&3, but with a single set of coefficients for all edges.
disp("Question 4 ======");
cvMethod = 'LeaveOneOut';
fprintf("%s cross-validation\n", cvMethod);
models = {Model1(), Model2(), Model3(), Model4(), Model5()};
MainSubtask(models, functional, structural, indirect, ...
    "bestModelsN", 5, ...
    "sortModelsByMeanOf", 'sse', ...
    "numEdges", 100, ...
    "fitMethod", 'FitPooled', ...
    "cvMethod", cvMethod);
disp("=================");
%% Q5:      Devise an additional model.
disp("Question 5 ======");
% NOTE: Alpha in the sigmoid and exponential models controls the steepness
%       of the exponential component. I did a grid search and found that
%       the closer you are to zero the better, but with diminishing returns
%       past 1 (AIC/BIC/SSE not that much better), so I've chosen 1.
%       Theta controls the midpoint of the exponential component in the
%       sigmoid models i.e. where the exponential component most rapidly
%       changes. I've set it to the median structural connectivity value,
%       computed only across edges that all subjects share, which I think
%       makes sense.
alpha = 1;
theta = prctile(structural(:, squeeze(any(structural))), 50, "all");
models = {Model1(), Model2(), Model3(), Model4(), Model5(), ...
    InteractionModel(), ...
    LogStructural(), ...
    LogStructuralIndirect(), ...
    ExpStructural(alpha), ...
    ExpStructuralIndirect(alpha), ...
    SigmoidStructural(alpha, theta), ...
    SigmoidStructuralIndirect(alpha, theta)};
cvMethod = 'LeaveOneOut';
fprintf("%s cross-validation\n", cvMethod);
MainSubtask(models, functional, structural, indirect, ...
    "bestModelsN", 5, ...
    "sortModelsByMeanOf", 'sse', ...
    "numEdges", 100, ...
    "fitMethod", 'FitPooled', ...
    "cvMethod", cvMethod);
disp("=================");